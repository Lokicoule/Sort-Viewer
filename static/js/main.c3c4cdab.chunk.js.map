{"version":3,"sources":["store/models/algorithms.js","store/models/bubbleSort.js","store/models/selectionSort.js","store/models/mergeSort.js","store/models/quickSort.js","constants/components.js","store/models/referential.js","store/models/lock.js","store/models/speed.js","store/models/index.js","store/reducer.js","store/actions/sorting.js","store/selectors/speedSelector.js","store/middleware/dispatcher.js","helpers/animation.js","constants/animation.js","store/middleware/index.js","services/storeService.js","store/configureStore.js","components/customs/MySlider.jsx","components/customs/MyButton.jsx","components/customs/MyCheckBox.js","components/commons/Form.jsx","components/main/Playground/InfoBar.jsx","constants/item.js","components/main/Playground/Item.jsx","components/main/Playground/Items.jsx","containers/ItemsContainer.jsx","store/selectors/modelSelector.js","components/main/Playground/index.js","components/main/Playground/Playground.jsx","components/withLogic/withWindowDimensions.jsx","utils/arrayUtils.js","helpers/mappers/payloadMapper.js","helpers/sortHelper.js","operations/arrayOperation.js","constants/array.js","store/selectors/algorithmsSelector.js","store/selectors/lockSelector.js","store/selectors/referentialSelector.js","containers/PlaygroundContainer.jsx","components/main/ToolBar/ArrayGeneratorForm.jsx","containers/ArrayGeneratorFormContainer.jsx","components/main/ToolBar/SortForm.jsx","helpers/decorators/sortOperation.js","operations/bubbleSortOperation.js","operations/selectionSortOperation.js","operations/mergeSortOperation.js","operations/quickSortOperation.js","operations/index.js","containers/SortFormContainer.jsx","components/main/ToolBar/ToolBar.jsx","components/main/App.jsx","serviceWorker.js","index.jsx"],"names":["slice","createSlice","name","initialState","bubbleSort","checked","label","selectionSort","mergeSort","quickSort","reducers","setAlgorithm","algorithms","action","payload","actions","items","executionTime","setItem","state","index","item","setItems","setExecutionTime","reducer","free","sortedItems","INITIAL_SPEED","speed","INITIAL_ARRAY_SIZE","size","DARK_THEME","nbItems","setNbItems","referential","setSortedItems","bubbleSortLocked","lock","quickSortLocked","mergeSortLocked","selectionSortLocked","value","setSpeed","combineReducers","models","sortActionDispatched","createAction","getSpeed","createSelector","handleDispatch","toDispatch","latencies","dispatch","getState","length","speedParameter","speedCalculator","dispatchActions","type","dispatchAction","shift","setTimeout","dispatcher","store","next","middleware","getDefaultMiddleware","configureStore","MySlider","withStyles","root","color","props","thumb","height","width","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","other","Slider","MyButton","styled","Button","background","padding","margin","MyCheckBox","pink","Checkbox","Form","data","handleSubmit","e","preventDefault","doSubmit","handleSliderChange","newValue","setState","doSelectChange","handleCheckChange","target","checkList","doCheckChange","disabled","FormControlLabel","key","control","onChange","this","min","max","FormControl","style","minWidth","maxWidth","Typography","valueLabelDisplay","aria-label","val","Component","MyAppBar","AppBar","alignItems","InfoBar","position","model","fontWeight","fontSize","marginBottom","defaultProps","ItemStateColorEnum","Object","freeze","SORTED","PARTITIONED","CURRENT","SWAPPER","SWAPPED","PIVOT","DEFAULT","Item","paddingLeft","minHeight","Items","map","paddingTop","connect","ownProps","modelName","Playground","updateReferential","windowDimensions","widthPercentage","nbInfoBar","totalMargin","display","flexWrap","algorithm","ItemsContainer","withWindowDimensions","WrappedComponent","dimensions","updateWindowDimensions","window","innerWidth","innerHeight","addEventListener","removeEventListener","array","leftElementIdx","rightElementIdx","a","setItemMapper","cursorMapper","i","cursorReleasedMapper","sorted","sortItemsByValueAsc","sort","nextItem","itemIsSorted","sortedArr","elemToSort","newIdx","some","elem","swap","updateSwappers","push","waiting","arrayUtils","getItemsPartition","startIdx","endIdx","swappersReleased","sortedArray","j","getIndexById","id","findIndex","element","dispatchUpdatedItemsToStore","Math","round","random","generateRandomArray","setBubbleSortItems","setSelectionSortItems","setMergeSortItems","setQuickSortItems","getSelectedAlgorithms","entries","filter","getAlgorithms","isLocked","getSortedItems","getNbItems","locked","ArrayGeneratorForm","sliderProps","blue","flexGrow","justifyContent","onSubmit","renderSlider","renderButton","SortForm","change","selectedAlgorithms","submit","renderCheckBox","decorator","wrappedFunc","executionAction","lockAction","t0","performance","now","result","apply","arguments","t1","unshift","toFixed","lastUnsortedIdx","partition","nbElements","minIdx","getMinItemAction","getReleaseCursorAction","middleIdx","floor","temp","accLeft","accRight","accTemp","merge","right","pivotIndex","pivot","operations","wrappedSort","speedToPercentage","forEach","sortOperation","ToolBar","Toolbar","ArrayGeneratorFormContainer","SortFormContainer","App","PlaygroundContainer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c3c4cdab.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst slice = createSlice({\n  name: \"algorithms\",\n  initialState: {\n    bubbleSort: {\n      checked: true,\n      label: \"BubbleSort\",\n    },\n    selectionSort: {\n      checked: true,\n      label: \"SelectionSort\",\n    },\n    mergeSort: {\n      checked: true,\n      label: \"MergeSort\",\n    },\n    quickSort: {\n      checked: true,\n      label: \"QuickSort\",\n    },\n  },\n  reducers: {\n    setAlgorithm: (algorithms, action) => {\n      const { name, checked } = action.payload;\n      algorithms[name].checked = checked;\n    },\n  },\n});\n\nexport const { setAlgorithm } = slice.actions;\nexport default slice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst slice = createSlice({\n  name: \"bubbleSort\",\n  initialState: {\n    label: \"BubbleSort\",\n    items: [],\n    executionTime: null,\n  },\n  reducers: {\n    setItem: (state, action) => {\n      const { index, item } = action.payload;\n      state.items[index] = item;\n    },\n    setItems: (state, action) => {\n      const { items } = action.payload;\n      state.items = items;\n    },\n    setExecutionTime: (state, action) => {\n      const { executionTime } = action.payload;\n      state.executionTime = executionTime;\n    },\n  },\n});\n\nconst { actions, reducer } = slice;\nexport const { name } = slice;\nexport const { setItem, setItems, setExecutionTime } = actions;\nexport default reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nconst slice = createSlice({\n  name: \"selectionSort\",\n  initialState: {\n    label: \"SelectionSort\",\n    items: [],\n    executionTime: null,\n  },\n  reducers: {\n    free: (state, action) => {\n      state.items = [];\n    },\n    setItem: (state, action) => {\n      const { index, item } = action.payload;\n      state.items[index] = item;\n    },\n    setItems: (state, action) => {\n      const { items } = action.payload;\n      state.items = items;\n    },\n    setExecutionTime: (state, action) => {\n      const { executionTime } = action.payload;\n      state.executionTime = executionTime;\n    },\n  },\n});\n\nconst { actions, reducer } = slice;\nexport const { name } = slice;\nexport const { setItem, setItems, free, setExecutionTime } = actions;\nexport default reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst slice = createSlice({\n  name: \"mergeSort\",\n  initialState: {\n    label: \"MergeSort\",\n    items: [],\n    executionTime: null,\n  },\n  reducers: {\n    free: (state) => {\n      state.items = [];\n    },\n    setItem: (state, action) => {\n      const { index, item } = action.payload;\n      state.items[index] = item;\n    },\n    setItems: (state, action) => {\n      const { items } = action.payload;\n      state.items = items;\n    },\n    setExecutionTime: (state, action) => {\n      const { executionTime } = action.payload;\n      state.executionTime = executionTime;\n    },\n  },\n});\n\nconst { actions, reducer } = slice;\nexport const { name } = slice;\nexport const { free, setExecutionTime, setItem, setItems } = actions;\nexport default reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst slice = createSlice({\n  name: \"quickSort\",\n  initialState: {\n    label: \"QuickSort\",\n    items: [],\n    executionTime: null,\n  },\n  reducers: {\n    free: (state, action) => {\n      state.items = [];\n    },\n    setExecutionTime: (state, action) => {\n      const { executionTime, items } = action.payload;\n      state.executionTime = executionTime;\n      state.sortedItems = items;\n    },\n    setItem: (state, action) => {\n      const { index, item } = action.payload;\n      state.items[index] = item;\n    },\n    setItems: (state, action) => {\n      const { items } = action.payload;\n      state.items = items;\n    },\n  },\n});\n\nconst { actions, reducer } = slice;\nexport const { name } = slice;\nexport const { free, setExecutionTime, setItem, setItems } = actions;\nexport default reducer;\n","export const INITIAL_SPEED = { speed: 75 };\nexport const INITIAL_ARRAY_SIZE = { size: 10 };\nexport const DARK_THEME = {\n  color: \"#172a3a\",\n};\nexport const TOOLBAR_PIXELS_HEIGHT = 80;\nexport const INFOBAR_PIXELS_HEIGHT = 55;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { INITIAL_ARRAY_SIZE } from \"../../constants/components\";\n\nconst slice = createSlice({\n  name: \"referential\",\n  initialState: {\n    items: [],\n    sortedItems: [],\n    nbItems: INITIAL_ARRAY_SIZE.size,\n  },\n  reducers: {\n    setNbItems: (referential, action) => {\n      const { nbItems } = action.payload;\n      referential.nbItems = nbItems;\n    },\n    setSortedItems: (referential, action) => {\n      const { sortedItems } = action.payload;\n      referential.sortedItems = sortedItems;\n    },\n    setItems: (referential, action) => {\n      const { items } = action.payload;\n      referential.items = items;\n    },\n  },\n});\n\nexport const { setNbItems, setSortedItems, setItems } = slice.actions;\nexport const { name } = slice;\n\nexport default slice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst slice = createSlice({\n  name: \"lock\",\n  initialState: {\n    bubbleSort: false,\n    quickSort: false,\n    mergeSort: false,\n    selectionSort: false,\n  },\n  reducers: {\n    bubbleSortLocked: (lock, { payload }) => {\n      lock.bubbleSort = payload;\n    },\n    quickSortLocked: (lock, { payload }) => {\n      lock.quickSort = payload;\n    },\n    mergeSortLocked: (lock, { payload }) => {\n      lock.mergeSort = payload;\n    },\n    selectionSortLocked: (lock, { payload }) => {\n      lock.selectionSort = payload;\n    },\n  },\n});\n\nexport const {\n  bubbleSortLocked,\n  quickSortLocked,\n  mergeSortLocked,\n  selectionSortLocked,\n} = slice.actions;\nexport default slice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst slice = createSlice({\n  name: \"speed\",\n  initialState: {\n    value: 1,\n  },\n  reducers: {\n    setSpeed: (speed, action) => {\n      speed.value = action.payload;\n    },\n  },\n});\n\nexport const { setSpeed } = slice.actions;\nexport default slice.reducer;\n","import { combineReducers } from \"redux\";\n\nimport algorithms from \"./algorithms\";\nimport bubbleSort from \"./bubbleSort\";\nimport selectionSort from \"./selectionSort\";\nimport mergeSort from \"./mergeSort\";\nimport quickSort from \"./quickSort\";\nimport referential from \"./referential\";\nimport lock from \"./lock\";\nimport speed from \"./speed\";\n\nexport default combineReducers({\n  algorithms,\n  bubbleSort,\n  selectionSort,\n  mergeSort,\n  quickSort,\n  referential,\n  lock,\n  speed,\n});\n","import { combineReducers } from \"redux\";\nimport models from \"./models\";\nexport default combineReducers({\n  models,\n});\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const sortActionDispatched = createAction(\"sortAction/Dispatched\");\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getSpeed = createSelector(\n  (state) => state.models.speed,\n  (speed) => speed.value\n);\n","import { speedCalculator } from \"../../helpers/animation\";\nimport { sortActionDispatched } from \"../actions/sorting\";\nimport { getSpeed } from \"../selectors/speedSelector\";\n\nfunction dispatchAction(action, dispatch) {\n  if (action && action.type) dispatch(action);\n}\n\nfunction dispatchActions(actions, dispatch) {\n  if (!actions.length) return;\n  dispatchAction(actions[0], dispatch);\n  actions.shift();\n  dispatchActions(actions, dispatch);\n}\n\nfunction handleDispatch(toDispatch, { dispatch, getState }, latencies) {\n  if (!toDispatch.length) return;\n  const { actions } = toDispatch[0];\n  const speed = speedCalculator(getSpeed(getState()), latencies);\n\n  dispatchActions(actions, dispatch);\n\n  setTimeout(() => {\n    toDispatch.shift();\n    handleDispatch(toDispatch, { dispatch, getState }, latencies);\n  }, speed);\n}\n\nconst dispatcher = (store) => (next) => (action) => {\n  if (action.type !== sortActionDispatched.type) return next(action);\n  const { toDispatch, latencies } = action.payload;\n  handleDispatch(toDispatch, store, latencies);\n};\n\nexport default dispatcher;\n","import {\n  DELAY_COEFFICIENT,\n  SPEED_USE,\n  SPEED_MAX,\n} from \"../constants/animation\";\n\nexport function speedCalculator(speedParameter, latencies) {\n  let speed = 0;\n  if (speedParameter && latencies) {\n    speed = DELAY_COEFFICIENT * (speedParameter / (latencies * SPEED_USE));\n  }\n  return speed;\n}\n\nexport function speedToPercentage(speed) {\n  return SPEED_MAX - speed;\n}\n","export const DELAY_COEFFICIENT = 30;\nexport const SPEED_USE = 4;\nexport const SPEED_MAX = 100;\n","import { getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport dispatcher from \"./dispatcher\";\n\nconst middleware = [...getDefaultMiddleware(), dispatcher];\n\nexport default middleware;\n","import configureStore from \"../store/configureStore\";\n\nconst store = configureStore();\n\nexport default store;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport reducer from \"./reducer\";\nimport middleware from \"./middleware\";\n\nexport default function () {\n  return configureStore({\n    reducer,\n    middleware,\n  });\n}\n","import React from \"react\";\nimport { Slider, withStyles } from \"@material-ui/core\";\n\n/* HIGHER ORDER COMPONENT WAY */\n\nconst style = {\n  root: {\n    color: (props) => props.color,\n  },\n  thumb: {\n    height: 20,\n    width: 20,\n    backgroundColor: \"#fff\",\n    border: \"2px solid currentColor\",\n    marginTop: -8,\n    marginLeft: -12,\n    \"&:focus, &:hover, &$active\": {\n      boxShadow: \"inherit\",\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: \"calc(-50%)\",\n  },\n  track: {\n    height: 5,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 5,\n    borderRadius: 4,\n  },\n};\n\nfunction MySliderRaw(props) {\n  const { color, ...other } = props;\n  return <Slider {...other} />;\n}\n\nconst MySlider = withStyles(style)(MySliderRaw);\n\nexport default MySlider;\n","import React from \"react\";\nimport { styled } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\n/** StyledComponent WAY */\n\nconst style = {\n  background: (props) =>\n    props.color === \"red\"\n      ? \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\"\n      : \"linear-gradient(45deg, #2196f3 30%, #21cbf3 90%)\",\n  border: 0,\n  borderRadius: 3,\n  boxShadow: (props) =>\n    props.color === \"red\"\n      ? \"0 3px 5px 2px rgba(255, 105, 135, .3)\"\n      : \"0 3px 5px 2px rgba(33, 203, 243, .30)\",\n  color: \"white\",\n  height: 48,\n  padding: (props) => (props.padding === \"large\" ? \"0 30px\" : \"\"),\n  margin: 8,\n};\n\nconst MyButton = styled(({ color, ...other }) => <Button {...other} />)(style);\n\nexport default MyButton;\n","import { Checkbox, withStyles } from \"@material-ui/core\";\nimport { pink } from \"@material-ui/core/colors\";\nimport React from \"react\";\n\nconst MyCheckBox = withStyles({\n  root: {\n    color: pink[400],\n    \"&$checked\": {\n      color: pink[400],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nexport default MyCheckBox;\n","import React, { Component } from \"react\";\nimport { Typography, FormControl, FormControlLabel } from \"@material-ui/core\";\nimport MySlider from \"../customs/MySlider\";\nimport MyButton from \"../customs/MyButton\";\nimport MyCheckBox from \"../customs/MyCheckBox\";\n\nclass Form extends Component {\n  state = { data: {} };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.doSubmit();\n  };\n\n  handleSliderChange = (e, newValue, name) => {\n    const data = { ...this.state.data };\n    data[name] = newValue;\n    this.setState({ data }, () => this.doSelectChange());\n  };\n\n  handleCheckChange = (e) => {\n    const { name, checked } = e.target;\n    const checkList = { ...this.state.data.checkList };\n    checkList[name] = checked;\n    const data = { ...this.state.data, checkList };\n    this.setState({ data }, () => this.doCheckChange({ name, checked }));\n  };\n\n  renderButton(label, disabled, color) {\n    return (\n      <MyButton\n        disabled={disabled}\n        type=\"submit\"\n        size=\"medium\"\n        padding=\"large\"\n        color={color}\n      >\n        {label}\n      </MyButton>\n    );\n  }\n\n  renderCheckBox(name, label, checked) {\n    return (\n      <FormControlLabel\n        key={name}\n        control={\n          <MyCheckBox\n            onChange={this.handleCheckChange}\n            name={name}\n            checked={checked}\n          />\n        }\n        label={label}\n      />\n    );\n  }\n\n  renderSlider({ label, name, value, disabled, color, min, max }) {\n    return (\n      <FormControl\n        style={{\n          minWidth: \"150px\",\n          maxWidth: \"300px\",\n          marginLeft: 10,\n          marginTop: 7,\n        }}\n      >\n        <Typography>{label}</Typography>\n        <MySlider\n          color={color}\n          valueLabelDisplay=\"auto\"\n          aria-label=\"slider\"\n          value={value}\n          min={min}\n          max={max}\n          disabled={disabled}\n          onChange={(e, val) => this.handleSliderChange(e, val, name)}\n        />\n      </FormControl>\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\n\nimport Form from \"../../commons/Form\";\nimport { DARK_THEME } from \"../../../constants/components\";\nimport { AppBar, styled } from \"@material-ui/core\";\n\nconst MyAppBar = styled(({ color, ...other }) => <AppBar {...other} />)({\n  background: (props) => props.color,\n  alignItems: \"center\",\n});\n\nclass InfoBar extends Form {\n  render() {\n    const { position, model } = this.props;\n    return (\n      <MyAppBar color={DARK_THEME.color} position={position}>\n        <span\n          style={{ fontWeight: \"bold\", marginTop: \"5px\", fontSize: \"20px\" }}\n        >\n          {model.label}\n        </span>\n        <span style={{ marginTop: \"5px\", marginBottom: \"5px\" }}>\n          Real execution time : {model.executionTime}\n        </span>\n      </MyAppBar>\n    );\n  }\n}\n\nInfoBar.defaultProps = {\n  position: \"fixed\",\n};\n\nexport default InfoBar;\n","export const ItemStateColorEnum = Object.freeze({\n  SORTED: \"#90be6d\",\n  PARTITIONED: \"blue\",\n  CURRENT: \"#f9c74f\",\n  SWAPPER: \"orange\",\n  SWAPPED: \"purple\",\n  PIVOT: \"red\",\n  DEFAULT: \"#577590\",\n});\n","import { styled } from \"@material-ui/core\";\nimport { ItemStateColorEnum } from \"../../../constants/item\";\n\nconst Item = styled(\"div\")({\n  background: ({ state }) => (state && state) || ItemStateColorEnum.DEFAULT,\n  width: ({ value }) => `${(value * 100) / 220}%`,\n  height: ({ height }) => `${height}px`,\n  backgroundColor: \"#ffd23f\",\n  color: \"#fff\",\n  marginTop: \"1px\",\n  fontSize: ({ fontSize }) => `${fontSize}px`,\n  paddingLeft: \"15px\",\n  minHeight: \"2px\",\n});\n\nexport default Item;\n","import React from \"react\";\nimport InfoBar from \"./InfoBar\";\nimport Item from \"./Item\";\n\nconst Items = ({ model, width, height, fontSize }) => {\n  return (\n    <div\n      style={{\n        width: `${width}%`,\n        backgroundColor: \"#114b5f\",\n      }}\n    >\n      {model.items &&\n        model.items.map((item, index) => (\n          <Item\n            key={index}\n            value={item.value}\n            height={height}\n            state={item.state}\n            fontSize={fontSize}\n          >\n            <span style={{ position: \"fixed\", paddingTop: `${height / 5}px` }}>\n              {item.value}\n            </span>\n          </Item>\n        ))}\n      <InfoBar position=\"static\" model={model} />\n    </div>\n  );\n};\n\nexport default Items;\n","import { connect } from \"react-redux\";\n\nimport Items from \"../components/main/Playground/Items\";\n\nimport { getModel } from \"../store/selectors/modelSelector\";\n\nconst mapStateToProps = (state, ownProps) => ({\n  model: getModel(ownProps.modelName)(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Items);\n","export const getModel = (name) => (state) => state.models[name];\n\nexport const getModelItems = (name) => (state) => state.models[name].items;\n","import Playground from \"./Playground\";\n\nexport default Playground;\n","import React, { Component } from \"react\";\nimport {\n  INFOBAR_PIXELS_HEIGHT,\n  TOOLBAR_PIXELS_HEIGHT,\n} from \"../../../constants/components\";\nimport ItemsContainer from \"../../../containers/ItemsContainer\";\n\nclass Playground extends Component {\n  componentDidMount() {\n    const { nbItems, updateReferential } = this.props;\n    updateReferential(nbItems);\n  }\n\n  render() {\n    const { nbItems, algorithms, windowDimensions } = this.props;\n    const widthPercentage = algorithms.length > 1 ? 50 : 100;\n    const nbInfoBar = algorithms.length > 2 ? 2 : 1;\n    const marginPerItem = algorithms.length > 2 ? 2 : 1;\n    const totalMargin = nbItems * marginPerItem;\n    const containerHeight =\n      windowDimensions.height -\n      TOOLBAR_PIXELS_HEIGHT -\n      INFOBAR_PIXELS_HEIGHT * nbInfoBar -\n      totalMargin;\n    const height = containerHeight / totalMargin;\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n        }}\n      >\n        {algorithms &&\n          algorithms.map((algorithm) => (\n            <ItemsContainer\n              key={algorithm}\n              modelName={algorithm}\n              width={widthPercentage}\n              height={height}\n              fontSize={height / 2}\n            ></ItemsContainer>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default Playground;\n","import React, { Component } from \"react\";\n\nconst withWindowDimensions = (WrappedComponent) =>\n  class extends Component {\n    state = { dimensions: { width: 0, height: 0 } };\n\n    componentDidMount() {\n      this.updateWindowDimensions();\n      window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions = () => {\n      const dimensions = {\n        width: window.innerWidth,\n        height: window.innerHeight,\n      };\n      this.setState({ dimensions });\n    };\n\n    render() {\n      return (\n        <WrappedComponent\n          {...this.props}\n          windowDimensions={this.state.dimensions}\n        />\n      );\n    }\n  };\n\nexport default withWindowDimensions;\n","export async function swap(array, leftElementIdx, rightElementIdx) {\n  [array[leftElementIdx], array[rightElementIdx]] = [\n    array[rightElementIdx],\n    array[leftElementIdx],\n  ];\n}\n","import { ItemStateColorEnum } from \"../../constants/item\";\n\nexport const setItemMapper = (item, index, state) => ({\n  index,\n  item: { ...item, state },\n});\n\nexport const cursorMapper = (array, i) =>\n  setItemMapper(array[i], i, ItemStateColorEnum.CURRENT);\n\nexport const cursorReleasedMapper = (array, i, sorted) =>\n  setItemMapper(\n    array[i],\n    i,\n    sorted ? ItemStateColorEnum.SORTED : ItemStateColorEnum.DEFAULT\n  );\n","import { ItemStateColorEnum } from \"../constants/item\";\nimport * as arrayUtils from \"../utils/arrayUtils\";\nimport { cursorReleasedMapper, setItemMapper } from \"./mappers/payloadMapper\";\n\nexport const sortItemsByValueAsc = (items) =>\n  [...items].sort((item, nextItem) => (item.value < nextItem.value && -1) || 1);\n\nexport const itemIsSorted = (sortedArr, elemToSort, newIdx) =>\n  sortedArr.some((elem, i) => elem.value === elemToSort.value && i === newIdx);\n\nexport function generateRandomArray(length, max) {\n  let array = [];\n  let index = 0;\n  while (array.length < length)\n    array.push({\n      id: index++,\n      value: Math.round(Math.random() * max + 15),\n    });\n  return array;\n}\n\nexport function swap(array, leftElementIdx, rightElementIdx, action) {\n  const updateSwappers = (state) => [\n    action(setItemMapper(array[leftElementIdx], leftElementIdx, state)),\n    action(setItemMapper(array[rightElementIdx], rightElementIdx, state)),\n  ];\n\n  let toDispatch = [];\n  toDispatch.push({\n    actions: [...updateSwappers(ItemStateColorEnum.SWAPPER)],\n    waiting: true,\n  });\n  arrayUtils.swap(array, leftElementIdx, rightElementIdx);\n  toDispatch.push({\n    actions: [...updateSwappers(ItemStateColorEnum.SWAPPED)],\n    waiting: true,\n  });\n  return toDispatch;\n}\n\nexport function getItemsPartition(array, startIdx, endIdx, action) {\n  const toDispatch = [];\n  for (let i = startIdx; i <= endIdx; i++) {\n    toDispatch.push(\n      action(setItemMapper(array[i], i, ItemStateColorEnum.PARTITIONED))\n    );\n  }\n  return toDispatch;\n}\n\nexport function swappersReleased(array, sortedArray, i, j, action) {\n  return [\n    action(\n      cursorReleasedMapper(array, i, itemIsSorted(sortedArray, array[i], i))\n    ),\n    action(\n      cursorReleasedMapper(array, j, itemIsSorted(sortedArray, array[j], j))\n    ),\n  ];\n}\n\nexport const getIndexById = (array, id) =>\n  array.findIndex((element) => element.id === id);\n","import {\n  generateRandomArray,\n  sortItemsByValueAsc,\n} from \"../helpers/sortHelper\";\nimport {\n  setItems,\n  setNbItems,\n  setSortedItems,\n} from \"../store/models/referential\";\nimport { setItems as setBubbleSortItems } from \"../store/models/bubbleSort\";\nimport { setItems as setSelectionSortItems } from \"../store/models/selectionSort\";\nimport { setItems as setMergeSortItems } from \"../store/models/mergeSort\";\nimport { setItems as setQuickSortItems } from \"../store/models/quickSort\";\nimport { MAXIMUM_ALLOWED_VALUE } from \"../constants/array\";\n\nexport const dispatchUpdatedItemsToStore = (nbItems) =>\n  function (dispatch) {\n    const items = generateRandomArray(nbItems, MAXIMUM_ALLOWED_VALUE);\n    dispatch(setNbItems({ nbItems }));\n    dispatch(setItems({ items }));\n    dispatch(setBubbleSortItems({ items }));\n    dispatch(setSelectionSortItems({ items }));\n    dispatch(setMergeSortItems({ items }));\n    dispatch(setQuickSortItems({ items }));\n    dispatch(setSortedItems({ sortedItems: sortItemsByValueAsc(items) }));\n  };\n","export const MAXIMUM_ALLOWED_VALUE = 200;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getSelectedAlgorithms = createSelector(\n  (state) => state.models.algorithms,\n  (algorithms) =>\n    Object.entries(algorithms)\n      .map(([algorithm, data]) => data.checked && algorithm)\n      .filter((algorithm) => algorithm)\n);\n\nexport const getAlgorithms = createSelector(\n  (state) => state.models.algorithms,\n  (algorithms) =>\n    Object.entries(algorithms).map(([algorithm, { checked, label }]) => ({\n      name: algorithm,\n      checked,\n      label,\n    }))\n);\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const isLocked = createSelector(\n  (state) => state.models.lock,\n  (lock) =>\n    lock.bubbleSort || lock.mergeSort || lock.selectionSort || lock.quickSort\n);\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getSortedItems = createSelector(\n  (state) => state.models.referential,\n  (referential) => referential.sortedItems\n);\n\nexport const getNbItems = createSelector(\n  (state) => state.models.referential,\n  (referential) => referential.nbItems\n);\n","import { connect } from \"react-redux\";\n\nimport Playground from \"../components/main/Playground\";\nimport withWindowDimensions from \"../components/withLogic/withWindowDimensions\";\nimport { dispatchUpdatedItemsToStore } from \"../operations/arrayOperation\";\n\nimport { getSelectedAlgorithms } from \"../store/selectors/algorithmsSelector\";\nimport { isLocked } from \"../store/selectors/lockSelector\";\nimport { getNbItems } from \"../store/selectors/referentialSelector\";\n\nconst mapStateToProps = (state) => {\n  return {\n    nbItems: getNbItems(state),\n    locked: isLocked(state),\n    algorithms: getSelectedAlgorithms(state),\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  updateReferential: (size) => {\n    dispatch(dispatchUpdatedItemsToStore(size));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withWindowDimensions(Playground));\n","import { blue } from \"@material-ui/core/colors\";\nimport React from \"react\";\nimport { INITIAL_ARRAY_SIZE } from \"../../../constants/components\";\n\nimport Form from \"../../commons/Form\";\n\nclass ArrayGeneratorForm extends Form {\n  state = {\n    data: { ...INITIAL_ARRAY_SIZE },\n  };\n\n  doSelectChange = () => {\n    const { size } = this.state.data;\n    this.props.updateReferential(size);\n  };\n\n  doSubmit = () => {\n    const { size } = this.state.data;\n    this.props.updateReferential(size);\n  };\n\n  render() {\n    const { size } = this.state.data;\n    const { locked } = this.props;\n    const sliderProps = {\n      label: \"Array size\",\n      name: \"size\",\n      value: size,\n      disabled: locked,\n      color: blue[400],\n      min: 5,\n      max: 30,\n    };\n    return (\n      <form\n        style={{\n          display: \"flex\",\n          flexGrow: 0.3,\n          flexWrap: \"wrap\",\n          justifyContent: \"space-around\",\n        }}\n        onSubmit={this.handleSubmit}\n      >\n        {this.renderSlider(sliderProps)}\n        {this.renderButton(\"Generate\", locked)}\n      </form>\n    );\n  }\n}\n\nexport default ArrayGeneratorForm;\n","import { connect } from \"react-redux\";\n\nimport ArrayGeneratorForm from \"../components/main/ToolBar/ArrayGeneratorForm\";\nimport { dispatchUpdatedItemsToStore } from \"../operations/arrayOperation\";\nimport { isLocked } from \"../store/selectors/lockSelector\";\n\nconst mapStateToProps = (state) => ({ locked: isLocked(state) });\n\n/**\n *\n * @param {*} dispatch\n */\nconst mapDispatchToProps = (dispatch) => ({\n  updateReferential: (size) => {\n    dispatch(dispatchUpdatedItemsToStore(size));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArrayGeneratorForm);\n","import React from \"react\";\n\nimport { INITIAL_SPEED } from \"../../../constants/components\";\n\nimport Form from \"../../commons/Form\";\nclass SortForm extends Form {\n  state = {\n    data: { ...INITIAL_SPEED },\n  };\n\n  doSelectChange = () => {\n    const { speed } = this.state.data;\n    const { setSpeed } = this.props;\n    setSpeed(speed);\n  };\n\n  doCheckChange = (change) => {\n    const { setAlgorithm } = this.props;\n    setAlgorithm(change);\n  };\n\n  doSubmit = () => {\n    const { sortedItems, selectedAlgorithms, submit } = this.props;\n    submit(sortedItems, selectedAlgorithms);\n  };\n\n  render() {\n    const { speed } = this.state.data;\n    const { locked, algorithms } = this.props;\n    const sliderProps = {\n      label: \"Speed\",\n      name: \"speed\",\n      value: speed,\n      disabled: false,\n      color: \"#FE6B8B\",\n    };\n    return (\n      <form\n        style={{\n          display: \"flex\",\n          flexGrow: 0.7,\n          flexWrap: \"wrap\",\n          justifyContent: \"space-around\",\n        }}\n        onSubmit={this.handleSubmit}\n      >\n        {algorithms.map(({ name, label, checked }) =>\n          this.renderCheckBox(name, label, checked)\n        )}\n        {this.renderSlider(sliderProps)}\n        {this.renderButton(\"Sort\", locked, \"red\")}\n      </form>\n    );\n  }\n}\n\nexport default SortForm;\n","export default function decorator(wrappedFunc) {\n  return function (executionAction) {\n    return function (lockAction) {\n      return function () {\n        const t0 = performance.now();\n        const result = wrappedFunc.apply(this, arguments);\n        const t1 = performance.now();\n        result.unshift({\n          actions: [\n            executionAction({\n              executionTime: `${(t1 - t0).toFixed(4)} (ms)`,\n            }),\n            lockAction(true),\n          ],\n        });\n        result.push({\n          actions: [lockAction(false)],\n        });\n        return result;\n      };\n    };\n  };\n}\n","import { setExecutionTime, setItem } from \"../store/models/bubbleSort\";\nimport { sortActionDispatched } from \"../store/actions/sorting\";\nimport { ItemStateColorEnum } from \"../constants/item\";\nimport { swap, itemIsSorted } from \"../helpers/sortHelper\";\nimport decorator from \"../helpers/decorators/sortOperation\";\nimport {\n  cursorMapper,\n  cursorReleasedMapper,\n  setItemMapper,\n} from \"../helpers/mappers/payloadMapper\";\nimport { bubbleSortLocked } from \"../store/models/lock\";\n\nexport const sortOperation = (array, sortedArray) => (dispatch) => {\n  const wrappedSort = decorator(bubbleSort)(setExecutionTime)(bubbleSortLocked);\n  dispatch(\n    sortActionDispatched({\n      toDispatch: wrappedSort([...array], sortedArray),\n      latencies: 4,\n    })\n  );\n};\n\nfunction bubbleSort(array, sortedArray) {\n  let lastUnsortedIdx = array.length - 1;\n  let toDispatch = [];\n  let sorted = false;\n  while (!sorted) {\n    sorted = partition(array, sortedArray, lastUnsortedIdx, toDispatch);\n    toDispatch.push({\n      actions: [\n        setItem(\n          setItemMapper(\n            array[lastUnsortedIdx],\n            lastUnsortedIdx--,\n            ItemStateColorEnum.SORTED\n          )\n        ),\n      ],\n    });\n  }\n\n  return toDispatch;\n}\n\nfunction partition(array, sortedArray, lastUnsortedIdx, toDispatch) {\n  let sorted = true;\n\n  for (let i = 0; i < lastUnsortedIdx; i++) {\n    toDispatch.push({\n      actions: [setItem(cursorMapper(array, i))],\n    });\n    if (array[i].value > array[i + 1].value) {\n      toDispatch.push(...swap(array, i, i + 1, setItem));\n      sorted = false;\n    }\n    toDispatch.push({\n      actions: [\n        setItem(\n          cursorReleasedMapper(array, i, itemIsSorted(sortedArray, array[i], i))\n        ),\n      ],\n    });\n  }\n  return sorted;\n}\n","import { setExecutionTime, setItem } from \"../store/models/selectionSort\";\nimport { sortActionDispatched } from \"../store/actions/sorting\";\nimport decorator from \"../helpers/decorators/sortOperation\";\nimport { ItemStateColorEnum } from \"../constants/item\";\nimport { itemIsSorted, swap } from \"../helpers/sortHelper\";\nimport {\n  cursorMapper,\n  cursorReleasedMapper,\n  setItemMapper,\n} from \"../helpers/mappers/payloadMapper\";\nimport { selectionSortLocked } from \"../store/models/lock\";\n\nexport const sortOperation = (array, sortedArray) => (dispatch) => {\n  const wrappedSort = decorator(selectionSort)(setExecutionTime)(\n    selectionSortLocked\n  );\n  dispatch(\n    sortActionDispatched({\n      toDispatch: wrappedSort([...array], sortedArray),\n      latencies: 5,\n    })\n  );\n};\n\nfunction selectionSort(array, sortedArray) {\n  let toDispatch = [];\n  for (let i = 0; i < array.length; i++) {\n    partition(i, toDispatch, array, sortedArray);\n    toDispatch.push({\n      actions: [setItem(setItemMapper(array[i], i, ItemStateColorEnum.SORTED))],\n    });\n  }\n  return toDispatch;\n}\n\nfunction partition(lastUnsortedIdx, toDispatch, array, sortedArray) {\n  const nbElements = array.length;\n  let minIdx = lastUnsortedIdx;\n\n  for (let i = lastUnsortedIdx; i < nbElements; i++) {\n    toDispatch.push({\n      actions: [setItem(cursorMapper(array, i))],\n    });\n    if (array[i].value < array[minIdx].value) {\n      toDispatch.push({\n        actions: [\n          setItem(\n            cursorReleasedMapper(\n              array,\n              minIdx,\n              itemIsSorted(sortedArray, array[minIdx], minIdx)\n            )\n          ),\n          setItem(getMinItemAction(array, i)),\n        ],\n      });\n      minIdx = i;\n    }\n    toDispatch.push({\n      actions: [getReleaseCursorAction(i, minIdx, array, sortedArray)],\n    });\n  }\n  toDispatch.push(...swap(array, lastUnsortedIdx, minIdx, setItem));\n}\n\nfunction getMinItemAction(array, i) {\n  return setItemMapper(array[i], i, ItemStateColorEnum.PIVOT);\n}\n\nfunction getReleaseCursorAction(i, minIdx, array, sortedArray) {\n  return (\n    (i !== minIdx &&\n      setItem(\n        cursorReleasedMapper(array, i, itemIsSorted(sortedArray, array[i], i))\n      )) ||\n    setItem(setItemMapper(array[i], i, ItemStateColorEnum.PIVOT))\n  );\n}\n","import { ItemStateColorEnum } from \"../constants/item\";\nimport {\n  cursorReleasedMapper,\n  setItemMapper,\n} from \"../helpers/mappers/payloadMapper\";\nimport {\n  getIndexById,\n  getItemsPartition,\n  itemIsSorted,\n  swap,\n  swappersReleased,\n} from \"../helpers/sortHelper\";\nimport decorator from \"../helpers/decorators/sortOperation\";\nimport { sortActionDispatched } from \"../store/actions/sorting\";\nimport { setExecutionTime, setItem } from \"../store/models/mergeSort\";\nimport { mergeSortLocked } from \"../store/models/lock\";\n\nexport const sortOperation = (array, sortedArray) => (dispatch) => {\n  const wrappedSort = decorator(mergeSort)(setExecutionTime)(mergeSortLocked);\n  dispatch(\n    sortActionDispatched({\n      toDispatch: wrappedSort([...array], sortedArray, 0, array.length - 1, []),\n      latencies: 4,\n    })\n  );\n};\n\nconst mergeSort = (array, sortedArray, startIdx, endIdx, toDispatch) => {\n  if (startIdx >= endIdx) return;\n\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\n  mergeSort(array, sortedArray, startIdx, middleIdx, toDispatch);\n  mergeSort(array, sortedArray, middleIdx + 1, endIdx, toDispatch);\n\n  return merge(array, sortedArray, startIdx, middleIdx, endIdx, toDispatch);\n};\n\nfunction merge(array, sortedArray, startIdx, middleIdx, endIdx, toDispatch) {\n  let temp = [];\n  let accLeft = startIdx;\n  let accRight = middleIdx + 1;\n  let accTemp = 0;\n  toDispatch.push({\n    actions: [...getItemsPartition(array, startIdx, endIdx, setItem)],\n  });\n  while (accLeft <= middleIdx && accRight <= endIdx) {\n    if (array[accLeft].value <= array[accRight].value) {\n      temp[accTemp++] = array[accLeft++];\n    } else {\n      temp[accTemp++] = array[accRight++];\n    }\n  }\n  while (accLeft <= middleIdx) {\n    temp[accTemp++] = array[accLeft++];\n  }\n  while (accRight <= endIdx) {\n    temp[accTemp++] = array[accRight++];\n  }\n  for (let i = startIdx; i <= endIdx; i++) {\n    const j = getIndexById(array, temp[i - startIdx].id);\n    toDispatch.push({\n      actions: [\n        setItem(setItemMapper(array[i], i, ItemStateColorEnum.CURRENT)),\n        setItem(setItemMapper(array[j], j, ItemStateColorEnum.CURRENT)),\n      ],\n    });\n    if (i !== j) {\n      toDispatch.push(...swap(array, i, j, setItem));\n      toDispatch.push({\n        actions: [...swappersReleased(array, sortedArray, i, j, setItem)],\n      });\n    } else {\n      toDispatch.push({\n        actions: [\n          setItem(\n            cursorReleasedMapper(\n              array,\n              j,\n              itemIsSorted(sortedArray, array[j], j)\n            )\n          ),\n        ],\n      });\n    }\n  }\n\n  return toDispatch;\n}\n","import { sortActionDispatched } from \"../store/actions/sorting\";\nimport { setExecutionTime, setItem } from \"../store/models/quickSort\";\nimport decorator from \"../helpers/decorators/sortOperation\";\nimport {\n  cursorMapper,\n  cursorReleasedMapper,\n  setItemMapper,\n} from \"../helpers/mappers/payloadMapper\";\nimport {\n  getItemsPartition,\n  itemIsSorted,\n  swap,\n  swappersReleased,\n} from \"../helpers/sortHelper\";\nimport { ItemStateColorEnum } from \"../constants/item\";\nimport { quickSortLocked } from \"../store/models/lock\";\n\nexport const sortOperation = (array, sortedArray) => (dispatch) => {\n  const wrappedSort = decorator(quickSort)(setExecutionTime)(quickSortLocked);\n  dispatch(\n    sortActionDispatched({\n      toDispatch: wrappedSort([...array], sortedArray, 0, array.length - 1, []),\n      latencies: 7,\n    })\n  );\n};\n\nfunction quickSort(array, sortedArray, left, right, toDispatch) {\n  if (array.length > 1) {\n    const index = partition(array, sortedArray, left, right, toDispatch);\n    if (left < index - 1) {\n      quickSort(array, sortedArray, left, index - 1, toDispatch);\n    }\n    if (index < right) {\n      quickSort(array, sortedArray, index, right, toDispatch);\n    }\n  }\n  return toDispatch;\n}\n\nfunction partition(array, sortedArray, left, right, toDispatch) {\n  const pivotIndex = Math.floor((right + left) / 2);\n  const pivot = array[pivotIndex];\n  let i = left,\n    j = right;\n  toDispatch.push({\n    actions: [\n      ...getItemsPartition(array, left, right, setItem),\n      setItem(setItemMapper(pivot, pivotIndex, ItemStateColorEnum.PIVOT)),\n    ],\n    waiting: true,\n  });\n  while (i <= j) {\n    while (array[i].value < pivot.value) {\n      toDispatch.push({\n        actions: [setItem(cursorMapper(array, i))],\n      });\n      toDispatch.push({\n        actions: [\n          setItem(\n            cursorReleasedMapper(\n              array,\n              i,\n              itemIsSorted(sortedArray, array[i], i)\n            )\n          ),\n        ],\n      });\n      i++;\n    }\n    while (array[j].value > pivot.value) {\n      toDispatch.push({\n        actions: [setItem(cursorMapper(array, j))],\n      });\n      toDispatch.push({\n        actions: [\n          setItem(\n            cursorReleasedMapper(\n              array,\n              j,\n              itemIsSorted(sortedArray, array[j], j)\n            )\n          ),\n        ],\n      });\n      j--;\n    }\n    if (i <= j) {\n      toDispatch.push(...swap(array, i, j, setItem));\n      toDispatch.push({\n        actions: [...swappersReleased(array, sortedArray, i, j, setItem)],\n      });\n      i++;\n      j--;\n    }\n  }\n  return i;\n}\n","import * as bubbleSort from \"../operations/bubbleSortOperation\";\nimport * as selectionSort from \"../operations/selectionSortOperation\";\nimport * as mergeSort from \"../operations/mergeSortOperation\";\nimport * as quickSort from \"../operations/quickSortOperation\";\n\nimport { getModelItems } from \"../store/selectors/modelSelector\";\n\nconst operations = {\n  bubbleSort: bubbleSort.sortOperation,\n  selectionSort: selectionSort.sortOperation,\n  mergeSort: mergeSort.sortOperation,\n  quickSort: quickSort.sortOperation,\n};\n\nexport const sortOperation = (algorithm, sortedArray) =>\n  function (dispatch, getState) {\n    const items = getModelItems(algorithm)(getState());\n    dispatch(operations[algorithm](items, sortedArray));\n  };\n","import { connect } from \"react-redux\";\n\nimport SortForm from \"../components/main/ToolBar/SortForm\";\n\nimport { speedToPercentage } from \"../helpers/animation\";\n\nimport { sortOperation } from \"../operations\";\n\nimport { getSortedItems } from \"../store/selectors/referentialSelector\";\nimport {\n  getAlgorithms,\n  getSelectedAlgorithms,\n} from \"../store/selectors/algorithmsSelector\";\n\nimport { setAlgorithm } from \"../store/models/algorithms\";\nimport { setSpeed } from \"../store/models/speed\";\nimport { isLocked } from \"../store/selectors/lockSelector\";\n\nconst mapStateToProps = (state) => ({\n  sortedItems: getSortedItems(state),\n  locked: isLocked(state),\n  selectedAlgorithms: getSelectedAlgorithms(state),\n  algorithms: getAlgorithms(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setSpeed: (speed) => dispatch(setSpeed(speedToPercentage(speed))),\n  setAlgorithm: (algorithm) => dispatch(setAlgorithm(algorithm)),\n  submit: (sortedArray, selectedAlgorithms) => {\n    selectedAlgorithms.forEach((algorithm) => {\n      dispatch(sortOperation(algorithm, sortedArray));\n    });\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SortForm);\n","import React from \"react\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nimport Form from \"../../commons/Form\";\nimport ArrayGeneratorFormContainer from \"../../../containers/ArrayGeneratorFormContainer\";\nimport SortFormContainer from \"../../../containers/SortFormContainer\";\nimport {\n  DARK_THEME,\n  TOOLBAR_PIXELS_HEIGHT,\n} from \"../../../constants/components\";\nimport { AppBar, styled } from \"@material-ui/core\";\n\nconst MyAppBar = styled(({ color, ...other }) => <AppBar {...other} />)({\n  background: (props) => props.color,\n});\n\nclass ToolBar extends Form {\n  render() {\n    return (\n      <MyAppBar color={DARK_THEME.color} position=\"static\">\n        <Toolbar\n          style={{\n            minHeight: TOOLBAR_PIXELS_HEIGHT,\n          }}\n        >\n          <ArrayGeneratorFormContainer />\n          <SortFormContainer />\n        </Toolbar>\n      </MyAppBar>\n    );\n  }\n}\nexport default ToolBar;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"../../services/storeService\";\n\nimport PlaygroundContainer from \"../../containers/PlaygroundContainer\";\nimport ToolBar from \"./ToolBar/ToolBar\";\n\nconst App = () => (\n  <Provider store={store}>\n    <ToolBar></ToolBar>\n    <PlaygroundContainer></PlaygroundContainer>\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/main/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}