{"version":3,"sources":["store/models/algorithms.js","constants/components.js","store/models/referential.js","store/models/lock.js","store/models/speed.js","store/models/index.js","store/reducer.js","store/actions/sorting.js","store/selectors/speedSelector.js","store/middleware/dispatcher.js","helpers/animationHelper.js","constants/animation.js","store/middleware/index.js","services/storeService.js","store/configureStore.js","components/customs/MySlider.jsx","components/customs/MyButton.jsx","components/customs/MyCheckBox.js","components/commons/Form.jsx","components/main/Playground/InfoBar.jsx","constants/item.js","components/main/Playground/Item.jsx","components/main/Playground/Items.jsx","store/selectors/algorithmsSelector.js","containers/ItemsContainer.jsx","components/main/Playground/index.js","components/main/Playground/Playground.jsx","components/wrappers/withWindowDimensions.jsx","utils/arrayUtils.js","helpers/mappers/payloadMapper.js","helpers/sortHelper.js","operations/arrayOperation.js","constants/array.js","store/selectors/lockSelector.js","store/selectors/referentialSelector.js","containers/PlaygroundContainer.jsx","components/main/ToolBar/ArrayGeneratorForm.jsx","containers/ArrayGeneratorFormContainer.jsx","components/main/ToolBar/SortForm.jsx","helpers/decorators/sortOperation.js","operations/bubbleSortOperation.js","operations/selectionSortOperation.js","operations/mergeSortOperation.js","operations/quickSortOperation.js","operations/index.js","containers/SortFormContainer.jsx","components/main/ToolBar/ToolBar.jsx","components/main/ToolBar/index.js","components/main/App.jsx","index.jsx"],"names":["slice","createSlice","name","initialState","bubbleSort","checked","label","items","executionTime","selectionSort","mergeSort","quickSort","reducers","setAlgorithm","algorithms","action","payload","algorithm","console","log","setItem","index","item","setItems","setExecutionTime","actions","INITIAL_SPEED","speed","INITIAL_ARRAY_SIZE","size","DARK_THEME","sortedItems","nbItems","setNbItems","referential","setSortedItems","bubbleSortLocked","lock","quickSortLocked","mergeSortLocked","selectionSortLocked","locks","value","setSpeed","combineReducers","models","sortActionDispatched","createAction","getSpeed","createSelector","state","dispatchActions","dispatch","length","dispatchAction","shift","dispatcher","store","next","type","toDispatch","latencies","handleDispatch","getState","speedParameter","speedCalculator","setTimeout","middleware","getDefaultMiddleware","configureStore","reducer","MySlider","withStyles","root","color","props","thumb","height","width","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","other","Slider","MyButton","styled","Button","background","padding","margin","MyCheckBox","pink","Checkbox","Form","data","handleSubmit","e","preventDefault","doSubmit","handleSliderChange","newValue","setState","doSelectChange","handleCheckChange","target","checkList","doCheckChange","disabled","FormControlLabel","key","control","onChange","this","min","max","FormControl","style","minWidth","maxWidth","Typography","valueLabelDisplay","aria-label","val","Component","MyAppBar","AppBar","alignItems","InfoBar","position","model","fontWeight","fontSize","marginBottom","defaultProps","ItemStateColorEnum","Object","freeze","SORTED","PARTITIONED","CURRENT","SWAPPER","SWAPPED","PIVOT","DEFAULT","Item","paddingLeft","minHeight","Items","map","paddingTop","getSelectedAlgorithms","entries","filter","getAlgorithms","connect","ownProps","modelName","Playground","updateReferential","windowDimensions","widthPercentage","nbInfoBar","totalMargin","display","flexWrap","ItemsContainer","withWindowDimensions","WrappedComponent","dimensions","updateWindowDimensions","window","innerWidth","innerHeight","addEventListener","removeEventListener","array","leftElementIdx","rightElementIdx","a","setItemMapper","cursorMapper","i","cursorReleasedMapper","sorted","sortItemsByValueAsc","sort","nextItem","itemIsSorted","sortedArr","elemToSort","newIdx","some","elem","swap","updateSwappers","push","arrayUtils","getItemsPartition","startIdx","endIdx","swappersReleased","sortedArray","j","getIndexById","id","findIndex","element","dispatchUpdatedItemsToStore","Math","round","random","generateRandomArray","forEach","isLocked","getSortedItems","getNbItems","locked","ArrayGeneratorForm","sliderProps","blue","flexGrow","justifyContent","onSubmit","renderSlider","renderButton","SortForm","selectedAlgorithms","submit","renderCheckBox","decorator","wrappedFunc","t0","performance","now","result","apply","arguments","t1","unshift","toFixed","lastUnsortedIdx","partition","nbElements","minIdx","getMinItemAction","getReleaseCursorAction","middleIdx","floor","temp","accLeft","accRight","accTemp","merge","right","pivotIndex","pivot","waiting","operations","wrappedSort","speedToPercentage","sortOperation","ToolBar","Toolbar","ArrayGeneratorFormContainer","SortFormContainer","App","PlaygroundContainer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a744ff1.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst slice = createSlice({\n  name: \"algorithms\",\n  initialState: {\n    bubbleSort: {\n      checked: true,\n      label: \"BubbleSort\",\n      items: [],\n      executionTime: null,\n    },\n    selectionSort: {\n      checked: true,\n      label: \"SelectionSort\",\n      items: [],\n      executionTime: null,\n    },\n    mergeSort: {\n      checked: true,\n      label: \"MergeSort\",\n      items: [],\n      executionTime: null,\n    },\n    quickSort: {\n      checked: true,\n      label: \"QuickSort\",\n      items: [],\n      executionTime: null,\n    },\n  },\n  reducers: {\n    setAlgorithm: (algorithms, action) => {\n      const { algorithm, checked } = action.payload;\n      console.log(algorithm);\n      algorithms[algorithm].checked = checked;\n    },\n    setItem: (algorithms, action) => {\n      const { algorithm, index, item } = action.payload;\n      algorithms[algorithm].items[index] = item;\n    },\n    setItems: (algorithms, action) => {\n      const { algorithm, items } = action.payload;\n      algorithms[algorithm].items = items;\n    },\n    setExecutionTime: (algorithms, action) => {\n      const { algorithm, executionTime } = action.payload;\n      algorithms[algorithm].executionTime = executionTime;\n    },\n  },\n});\n\nexport const {\n  setAlgorithm,\n  setItem,\n  setItems,\n  setExecutionTime,\n} = slice.actions;\nexport default slice.reducer;\n","export const INITIAL_SPEED = { speed: 75 };\nexport const INITIAL_ARRAY_SIZE = { size: 10 };\nexport const DARK_THEME = {\n  color: \"#172a3a\",\n};\nexport const TOOLBAR_PIXELS_HEIGHT = 80;\nexport const INFOBAR_PIXELS_HEIGHT = 55;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { INITIAL_ARRAY_SIZE } from \"../../constants/components\";\n\nconst slice = createSlice({\n  name: \"referential\",\n  initialState: {\n    sortedItems: [],\n    nbItems: INITIAL_ARRAY_SIZE.size,\n  },\n  reducers: {\n    setNbItems: (referential, action) => {\n      const { nbItems } = action.payload;\n      referential.nbItems = nbItems;\n    },\n    setSortedItems: (referential, action) => {\n      const { sortedItems } = action.payload;\n      referential.sortedItems = sortedItems;\n    },\n  },\n});\n\nexport const { setNbItems, setSortedItems, setItems } = slice.actions;\nexport const { name } = slice;\n\nexport default slice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst slice = createSlice({\n  name: \"lock\",\n  initialState: {\n    bubbleSort: false,\n    quickSort: false,\n    mergeSort: false,\n    selectionSort: false,\n  },\n  reducers: {\n    bubbleSortLocked: (lock, { payload }) => {\n      lock.bubbleSort = payload;\n    },\n    quickSortLocked: (lock, { payload }) => {\n      lock.quickSort = payload;\n    },\n    mergeSortLocked: (lock, { payload }) => {\n      lock.mergeSort = payload;\n    },\n    selectionSortLocked: (lock, { payload }) => {\n      lock.selectionSort = payload;\n    },\n  },\n});\n\nconst {\n  bubbleSortLocked,\n  quickSortLocked,\n  mergeSortLocked,\n  selectionSortLocked,\n} = slice.actions;\nexport const locks = {\n  bubbleSort: bubbleSortLocked,\n  selectionSort: selectionSortLocked,\n  mergeSort: mergeSortLocked,\n  quickSort: quickSortLocked,\n};\nexport default slice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst slice = createSlice({\n  name: \"speed\",\n  initialState: {\n    value: 1,\n  },\n  reducers: {\n    setSpeed: (speed, action) => {\n      speed.value = action.payload;\n    },\n  },\n});\n\nexport const { setSpeed } = slice.actions;\nexport default slice.reducer;\n","import { combineReducers } from \"redux\";\n\nimport algorithms from \"./algorithms\";\nimport referential from \"./referential\";\nimport lock from \"./lock\";\nimport speed from \"./speed\";\n\nexport default combineReducers({\n  algorithms,\n  referential,\n  lock,\n  speed,\n});\n","import { combineReducers } from \"redux\";\nimport models from \"./models\";\nexport default combineReducers({\n  models,\n});\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const sortActionDispatched = createAction(\"sortAction/Dispatched\");\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getSpeed = createSelector(\n  (state) => state.models.speed,\n  (speed) => speed.value\n);\n","import { speedCalculator } from \"../../helpers/animationHelper\";\nimport { sortActionDispatched } from \"../actions/sorting\";\nimport { setExecutionTime, setItem } from \"../models/algorithms\";\nimport { locks } from \"../models/lock\";\nimport { getSpeed } from \"../selectors/speedSelector\";\n\nfunction dispatchAction(payload, dispatch) {\n  const { algorithm, item, executionTime, lock } = payload;\n  (item && dispatch(setItem(payload))) ||\n    (executionTime && dispatch(setExecutionTime(payload))) ||\n    dispatch(locks[algorithm](lock));\n}\n\nfunction dispatchActions(actions, dispatch) {\n  if (!actions.length) return;\n  dispatchAction(actions[0], dispatch);\n  actions.shift();\n  dispatchActions(actions, dispatch);\n}\n\nfunction handleDispatch(toDispatch, { dispatch, getState }, latencies) {\n  if (!toDispatch.length) return;\n  const { actions } = toDispatch[0];\n  const speed = speedCalculator(getSpeed(getState()), latencies);\n\n  dispatchActions(actions, dispatch);\n\n  setTimeout(() => {\n    toDispatch.shift();\n    handleDispatch(toDispatch, { dispatch, getState }, latencies);\n  }, speed);\n}\n\nconst dispatcher = (store) => (next) => (action) => {\n  if (action.type !== sortActionDispatched.type) return next(action);\n  const { toDispatch, latencies } = action.payload;\n  handleDispatch(toDispatch, store, latencies);\n};\n\nexport default dispatcher;\n","import {\n  DELAY_COEFFICIENT,\n  SPEED_USE,\n  SPEED_MAX,\n} from \"../constants/animation\";\n\nexport function speedCalculator(speedParameter, latencies) {\n  let speed = 0;\n  if (speedParameter && latencies) {\n    speed = DELAY_COEFFICIENT * (speedParameter / (latencies * SPEED_USE));\n  }\n  return speed;\n}\n\nexport function speedToPercentage(speed) {\n  return SPEED_MAX - speed;\n}\n","export const DELAY_COEFFICIENT = 100;\nexport const SPEED_USE = 4;\nexport const SPEED_MAX = 100;\n","import { getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport dispatcher from \"./dispatcher\";\n\nconst middleware = [...getDefaultMiddleware(), dispatcher];\n\nexport default middleware;\n","import configureStore from \"../store/configureStore\";\n\nconst store = configureStore();\n\nexport default store;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport reducer from \"./reducer\";\nimport middleware from \"./middleware\";\n\nexport default function () {\n  return configureStore({\n    reducer,\n    middleware,\n  });\n}\n","import React from \"react\";\nimport { Slider, withStyles } from \"@material-ui/core\";\n\n/* HIGHER ORDER COMPONENT WAY */\n\nconst style = {\n  root: {\n    color: (props) => props.color,\n  },\n  thumb: {\n    height: 20,\n    width: 20,\n    backgroundColor: \"#fff\",\n    border: \"2px solid currentColor\",\n    marginTop: -8,\n    marginLeft: -12,\n    \"&:focus, &:hover, &$active\": {\n      boxShadow: \"inherit\",\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: \"calc(-50%)\",\n  },\n  track: {\n    height: 5,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 5,\n    borderRadius: 4,\n  },\n};\n\nfunction MySliderRaw(props) {\n  const { color, ...other } = props;\n  return <Slider {...other} />;\n}\n\nconst MySlider = withStyles(style)(MySliderRaw);\n\nexport default MySlider;\n","import React from \"react\";\nimport { styled } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\n/** StyledComponent WAY */\n\nconst style = {\n  background: (props) =>\n    props.color === \"red\"\n      ? \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\"\n      : \"linear-gradient(45deg, #2196f3 30%, #21cbf3 90%)\",\n  border: 0,\n  borderRadius: 3,\n  boxShadow: (props) =>\n    props.color === \"red\"\n      ? \"0 3px 5px 2px rgba(255, 105, 135, .3)\"\n      : \"0 3px 5px 2px rgba(33, 203, 243, .30)\",\n  color: \"white\",\n  height: 48,\n  padding: (props) => (props.padding === \"large\" ? \"0 30px\" : \"\"),\n  margin: 8,\n};\n\nconst MyButton = styled(({ color, ...other }) => <Button {...other} />)(style);\n\nexport default MyButton;\n","import { Checkbox, withStyles } from \"@material-ui/core\";\nimport { pink } from \"@material-ui/core/colors\";\nimport React from \"react\";\n\nconst MyCheckBox = withStyles({\n  root: {\n    color: pink[400],\n    \"&$checked\": {\n      color: pink[400],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nexport default MyCheckBox;\n","import React, { Component } from \"react\";\nimport { Typography, FormControl, FormControlLabel } from \"@material-ui/core\";\nimport MySlider from \"../customs/MySlider\";\nimport MyButton from \"../customs/MyButton\";\nimport MyCheckBox from \"../customs/MyCheckBox\";\n\nclass Form extends Component {\n  state = { data: {} };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.doSubmit();\n  };\n\n  handleSliderChange = (e, newValue, name) => {\n    const data = { ...this.state.data };\n    data[name] = newValue;\n    this.setState({ data }, () => this.doSelectChange());\n  };\n\n  handleCheckChange = (e) => {\n    const { name, checked } = e.target;\n    const checkList = { ...this.state.data.checkList };\n    checkList[name] = checked;\n    const data = { ...this.state.data, checkList };\n    this.setState({ data }, () => this.doCheckChange({ name, checked }));\n  };\n\n  renderButton(label, disabled, color) {\n    return (\n      <MyButton\n        disabled={disabled}\n        type=\"submit\"\n        size=\"medium\"\n        padding=\"large\"\n        color={color}\n      >\n        {label}\n      </MyButton>\n    );\n  }\n\n  renderCheckBox(name, label, checked) {\n    return (\n      <FormControlLabel\n        key={name}\n        control={\n          <MyCheckBox\n            onChange={this.handleCheckChange}\n            name={name}\n            checked={checked}\n          />\n        }\n        label={label}\n      />\n    );\n  }\n\n  renderSlider({ label, name, value, disabled, color, min, max }) {\n    return (\n      <FormControl\n        style={{\n          minWidth: \"150px\",\n          maxWidth: \"300px\",\n          marginLeft: 10,\n          marginTop: 7,\n        }}\n      >\n        <Typography>{label}</Typography>\n        <MySlider\n          color={color}\n          valueLabelDisplay=\"auto\"\n          aria-label=\"slider\"\n          value={value}\n          min={min}\n          max={max}\n          disabled={disabled}\n          onChange={(e, val) => this.handleSliderChange(e, val, name)}\n        />\n      </FormControl>\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\n\nimport Form from \"../../commons/Form\";\nimport { DARK_THEME } from \"../../../constants/components\";\nimport { AppBar, styled } from \"@material-ui/core\";\n\nconst MyAppBar = styled(({ color, ...other }) => <AppBar {...other} />)({\n  background: (props) => props.color,\n  alignItems: \"center\",\n});\n\nclass InfoBar extends Form {\n  render() {\n    const { position, model } = this.props;\n    return (\n      <MyAppBar color={DARK_THEME.color} position={position}>\n        <span\n          style={{ fontWeight: \"bold\", marginTop: \"5px\", fontSize: \"20px\" }}\n        >\n          {model.label}\n        </span>\n        <span style={{ marginTop: \"5px\", marginBottom: \"5px\" }}>\n          Real execution time : {model.executionTime}\n        </span>\n      </MyAppBar>\n    );\n  }\n}\n\nInfoBar.defaultProps = {\n  position: \"fixed\",\n};\n\nexport default InfoBar;\n","export const ItemStateColorEnum = Object.freeze({\n  SORTED: \"#badc58\",\n  PARTITIONED: \"#00d2d3\",\n  CURRENT: \"#fed330\",\n  SWAPPER: \"#fd9644\",\n  SWAPPED: \"#B33771\",\n  PIVOT: \"#fc5c65\",\n  DEFAULT: \"#577590\",\n});\n","import { styled } from \"@material-ui/core\";\nimport { ItemStateColorEnum } from \"../../../constants/item\";\n\nconst Item = styled(\"div\")({\n  background: ({ state }) => (state && state) || ItemStateColorEnum.DEFAULT,\n  width: ({ value }) => `${(value * 100) / 220}%`,\n  height: ({ height }) => `${height}px`,\n  backgroundColor: \"#ffd23f\",\n  color: \"#fff\",\n  marginTop: \"1px\",\n  fontSize: ({ fontSize }) => `${fontSize}px`,\n  paddingLeft: \"15px\",\n  minHeight: \"2px\",\n});\n\nexport default Item;\n","import React from \"react\";\nimport InfoBar from \"./InfoBar\";\nimport Item from \"./Item\";\n\nconst Items = ({ model, width, height, fontSize }) => {\n  return (\n    <div\n      style={{\n        width: `${width}%`,\n        backgroundColor: \"#114b5f\",\n      }}\n    >\n      {model.items &&\n        model.items.map((item, index) => (\n          <Item\n            key={index}\n            value={item.value}\n            height={height}\n            state={item.state}\n            fontSize={fontSize}\n          >\n            <span\n              style={{ position: \"absolute\", paddingTop: `${height / 5}px` }}\n            >\n              {item.value}\n            </span>\n          </Item>\n        ))}\n      <InfoBar position=\"static\" model={model} />\n    </div>\n  );\n};\n\nexport default Items;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getSelectedAlgorithms = createSelector(\n  (state) => state.models.algorithms,\n  (algorithms) =>\n    Object.entries(algorithms)\n      .map(([algorithm, data]) => data.checked && algorithm)\n      .filter((algorithm) => algorithm)\n);\n\nexport const getAlgorithms = createSelector(\n  (state) => state.models.algorithms,\n  (algorithms) =>\n    Object.entries(algorithms).map(([algorithm, { checked, label }]) => ({\n      algorithm,\n      checked,\n      label,\n    }))\n);\n\nexport const getAlgorithm = (name) => (state) => state.models.algorithms[name];\n\nexport const getAlgorithmItems = (name) => (state) =>\n  state.models.algorithms[name].items;\n","import { connect } from \"react-redux\";\n\nimport Items from \"../components/main/Playground/Items\";\n\nimport { getAlgorithm } from \"../store/selectors/algorithmsSelector\";\n\nconst mapStateToProps = (state, ownProps) => ({\n  model: getAlgorithm(ownProps.modelName)(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Items);\n","import Playground from \"./Playground\";\n\nexport default Playground;\n","import React, { Component } from \"react\";\nimport {\n  INFOBAR_PIXELS_HEIGHT,\n  TOOLBAR_PIXELS_HEIGHT,\n} from \"../../../constants/components\";\nimport ItemsContainer from \"../../../containers/ItemsContainer\";\n\nclass Playground extends Component {\n  componentDidMount() {\n    const { nbItems, updateReferential } = this.props;\n    updateReferential(nbItems);\n  }\n\n  render() {\n    const { nbItems, algorithms, windowDimensions } = this.props;\n    const widthPercentage = algorithms.length > 1 ? 50 : 100;\n    const nbInfoBar = algorithms.length > 2 ? 2 : 1;\n    const marginPerItem = algorithms.length > 2 ? 2 : 1;\n    const totalMargin = nbItems * marginPerItem;\n    const containerHeight =\n      windowDimensions.height -\n      TOOLBAR_PIXELS_HEIGHT -\n      INFOBAR_PIXELS_HEIGHT * nbInfoBar -\n      totalMargin;\n    const height = containerHeight / totalMargin;\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n        }}\n      >\n        {algorithms &&\n          algorithms.map((algorithm) => (\n            <ItemsContainer\n              key={algorithm}\n              modelName={algorithm}\n              width={widthPercentage}\n              height={height}\n              fontSize={height / 2}\n            ></ItemsContainer>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default Playground;\n","import React, { Component } from \"react\";\n\nconst withWindowDimensions = (WrappedComponent) =>\n  class extends Component {\n    state = { dimensions: { width: 0, height: 0 } };\n\n    componentDidMount() {\n      this.updateWindowDimensions();\n      window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions = () => {\n      const dimensions = {\n        width: window.innerWidth,\n        height: window.innerHeight,\n      };\n      this.setState({ dimensions });\n    };\n\n    render() {\n      return (\n        <WrappedComponent\n          {...this.props}\n          windowDimensions={this.state.dimensions}\n        />\n      );\n    }\n  };\n\nexport default withWindowDimensions;\n","export async function swap(array, leftElementIdx, rightElementIdx) {\n  [array[leftElementIdx], array[rightElementIdx]] = [\n    array[rightElementIdx],\n    array[leftElementIdx],\n  ];\n}\n","import { ItemStateColorEnum } from \"../../constants/item\";\n\nexport const setItemMapper = (algorithm, item, index, state) => ({\n  algorithm,\n  index,\n  item: { ...item, state },\n});\n\nexport const cursorMapper = (algorithm, array, i) =>\n  setItemMapper(algorithm, array[i], i, ItemStateColorEnum.CURRENT);\n\nexport const cursorReleasedMapper = (algorithm, array, i, sorted) =>\n  setItemMapper(\n    algorithm,\n    array[i],\n    i,\n    sorted ? ItemStateColorEnum.SORTED : ItemStateColorEnum.DEFAULT\n  );\n","import { ItemStateColorEnum } from \"../constants/item\";\nimport * as arrayUtils from \"../utils/arrayUtils\";\nimport { cursorReleasedMapper, setItemMapper } from \"./mappers/payloadMapper\";\n\nexport const sortItemsByValueAsc = (items) =>\n  [...items].sort((item, nextItem) => (item.value < nextItem.value && -1) || 1);\n\nexport const itemIsSorted = (sortedArr, elemToSort, newIdx) =>\n  sortedArr.some((elem, i) => elem.value === elemToSort.value && i === newIdx);\n\nexport function generateRandomArray(length, max) {\n  let array = [];\n  let index = 0;\n  while (array.length < length)\n    array.push({\n      id: index++,\n      value: Math.round(Math.random() * max + 15),\n    });\n  return array;\n}\n\nexport function swap(array, leftElementIdx, rightElementIdx, algorithm) {\n  const updateSwappers = (state) => [\n    setItemMapper(algorithm, array[leftElementIdx], leftElementIdx, state),\n    setItemMapper(algorithm, array[rightElementIdx], rightElementIdx, state),\n  ];\n\n  let toDispatch = [];\n  toDispatch.push({\n    actions: [...updateSwappers(ItemStateColorEnum.SWAPPER)],\n  });\n  arrayUtils.swap(array, leftElementIdx, rightElementIdx);\n  toDispatch.push({\n    actions: [...updateSwappers(ItemStateColorEnum.SWAPPED)],\n  });\n  return toDispatch;\n}\n\nexport function getItemsPartition(array, startIdx, endIdx, algorithm) {\n  const toDispatch = [];\n  for (let i = startIdx; i <= endIdx; i++) {\n    toDispatch.push(\n      setItemMapper(algorithm, array[i], i, ItemStateColorEnum.PARTITIONED)\n    );\n  }\n  return toDispatch;\n}\n\nexport function swappersReleased(array, sortedArray, i, j, algorithm) {\n  return [\n    cursorReleasedMapper(\n      algorithm,\n      array,\n      i,\n      itemIsSorted(sortedArray, array[i], i)\n    ),\n    cursorReleasedMapper(\n      algorithm,\n      array,\n      j,\n      itemIsSorted(sortedArray, array[j], j)\n    ),\n  ];\n}\n\nexport const getIndexById = (array, id) =>\n  array.findIndex((element) => element.id === id);\n","import {\n  generateRandomArray,\n  sortItemsByValueAsc,\n} from \"../helpers/sortHelper\";\nimport { setNbItems, setSortedItems } from \"../store/models/referential\";\nimport { MAXIMUM_ALLOWED_VALUE } from \"../constants/array\";\nimport { getAlgorithms } from \"../store/selectors/algorithmsSelector\";\nimport { setItems } from \"../store/models/algorithms\";\n\nexport const dispatchUpdatedItemsToStore = (nbItems) =>\n  function (dispatch, getState) {\n    const algorithms = getAlgorithms(getState());\n    const items = generateRandomArray(nbItems, MAXIMUM_ALLOWED_VALUE);\n    dispatch(setNbItems({ nbItems }));\n    algorithms.forEach(({ algorithm }) =>\n      dispatch(setItems({ algorithm, items }))\n    );\n    dispatch(setSortedItems({ sortedItems: sortItemsByValueAsc(items) }));\n  };\n","export const MAXIMUM_ALLOWED_VALUE = 200;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const isLocked = createSelector(\n  (state) => state.models.lock,\n  (lock) =>\n    lock.bubbleSort || lock.mergeSort || lock.selectionSort || lock.quickSort\n);\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getSortedItems = createSelector(\n  (state) => state.models.referential,\n  (referential) => referential.sortedItems\n);\n\nexport const getNbItems = createSelector(\n  (state) => state.models.referential,\n  (referential) => referential.nbItems\n);\n","import { connect } from \"react-redux\";\n\nimport Playground from \"../components/main/Playground\";\nimport withWindowDimensions from \"../components/wrappers/withWindowDimensions\";\nimport { dispatchUpdatedItemsToStore } from \"../operations/arrayOperation\";\n\nimport { getSelectedAlgorithms } from \"../store/selectors/algorithmsSelector\";\nimport { isLocked } from \"../store/selectors/lockSelector\";\nimport { getNbItems } from \"../store/selectors/referentialSelector\";\n\nconst mapStateToProps = (state) => {\n  return {\n    nbItems: getNbItems(state),\n    locked: isLocked(state),\n    algorithms: getSelectedAlgorithms(state),\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  updateReferential: (size) => {\n    dispatch(dispatchUpdatedItemsToStore(size));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withWindowDimensions(Playground));\n","import { blue } from \"@material-ui/core/colors\";\nimport React from \"react\";\nimport { INITIAL_ARRAY_SIZE } from \"../../../constants/components\";\n\nimport Form from \"../../commons/Form\";\n\nclass ArrayGeneratorForm extends Form {\n  state = {\n    data: { ...INITIAL_ARRAY_SIZE },\n  };\n\n  doSelectChange = () => {\n    const { size } = this.state.data;\n    this.props.updateReferential(size);\n  };\n\n  doSubmit = () => {\n    const { size } = this.state.data;\n    this.props.updateReferential(size);\n  };\n\n  render() {\n    const { size } = this.state.data;\n    const { locked } = this.props;\n    const sliderProps = {\n      label: \"Array size\",\n      name: \"size\",\n      value: size,\n      disabled: locked,\n      color: blue[400],\n      min: 5,\n      max: 100,\n    };\n    return (\n      <form\n        style={{\n          display: \"flex\",\n          flexGrow: 0.3,\n          flexWrap: \"wrap\",\n          justifyContent: \"space-around\",\n        }}\n        onSubmit={this.handleSubmit}\n      >\n        {this.renderSlider(sliderProps)}\n        {this.renderButton(\"Generate\", locked)}\n      </form>\n    );\n  }\n}\n\nexport default ArrayGeneratorForm;\n","import { connect } from \"react-redux\";\n\nimport ArrayGeneratorForm from \"../components/main/ToolBar/ArrayGeneratorForm\";\nimport { dispatchUpdatedItemsToStore } from \"../operations/arrayOperation\";\nimport { isLocked } from \"../store/selectors/lockSelector\";\n\nconst mapStateToProps = (state) => ({ locked: isLocked(state) });\n\n/**\n *\n * @param {*} dispatch\n */\nconst mapDispatchToProps = (dispatch) => ({\n  updateReferential: (size) => {\n    dispatch(dispatchUpdatedItemsToStore(size));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArrayGeneratorForm);\n","import React from \"react\";\n\nimport { INITIAL_SPEED } from \"../../../constants/components\";\n\nimport Form from \"../../commons/Form\";\nclass SortForm extends Form {\n  state = {\n    data: { ...INITIAL_SPEED },\n  };\n\n  doSelectChange = () => {\n    const { speed } = this.state.data;\n    const { setSpeed } = this.props;\n    setSpeed(speed);\n  };\n\n  doCheckChange = ({ name, checked }) => {\n    const { setAlgorithm } = this.props;\n    setAlgorithm({ algorithm: name, checked });\n  };\n\n  doSubmit = () => {\n    const { sortedItems, selectedAlgorithms, submit } = this.props;\n    submit(sortedItems, selectedAlgorithms);\n  };\n\n  render() {\n    const { speed } = this.state.data;\n    const { locked, algorithms } = this.props;\n    const sliderProps = {\n      label: \"Speed\",\n      name: \"speed\",\n      value: speed,\n      disabled: false,\n      color: \"#FE6B8B\",\n    };\n    return (\n      <form\n        style={{\n          display: \"flex\",\n          flexGrow: 0.7,\n          flexWrap: \"wrap\",\n          justifyContent: \"space-around\",\n        }}\n        onSubmit={this.handleSubmit}\n      >\n        {algorithms.map(({ algorithm, label, checked }) =>\n          this.renderCheckBox(algorithm, label, checked)\n        )}\n        {this.renderSlider(sliderProps)}\n        {this.renderButton(\"Sort\", locked, \"red\")}\n      </form>\n    );\n  }\n}\n\nexport default SortForm;\n","export default function decorator(wrappedFunc) {\n  return function (algorithm) {\n    return function () {\n      const t0 = performance.now();\n      const result = wrappedFunc.apply(this, arguments);\n      const t1 = performance.now();\n      result.unshift({\n        actions: [\n          {\n            algorithm,\n            executionTime: `${(t1 - t0).toFixed(4)} (ms)`,\n          },\n          { algorithm, lock: true },\n        ],\n      });\n      result.push({\n        actions: [{ algorithm, lock: false }],\n      });\n      return result;\n    };\n  };\n}\n","import { sortActionDispatched } from \"../store/actions/sorting\";\nimport { ItemStateColorEnum } from \"../constants/item\";\nimport { swap, itemIsSorted } from \"../helpers/sortHelper\";\nimport decorator from \"../helpers/decorators/sortOperation\";\nimport {\n  cursorMapper,\n  cursorReleasedMapper,\n  setItemMapper,\n} from \"../helpers/mappers/payloadMapper\";\n\nexport const sortOperation = (array, sortedArray, algorithm) => (dispatch) => {\n  const wrappedSort = decorator(bubbleSort)(algorithm);\n  dispatch(\n    sortActionDispatched({\n      toDispatch: wrappedSort([...array], sortedArray, algorithm),\n      latencies: 4,\n    })\n  );\n};\n\nfunction bubbleSort(array, sortedArray, algorithm) {\n  let lastUnsortedIdx = array.length - 1;\n  let toDispatch = [];\n  let sorted = false;\n  while (!sorted) {\n    sorted = partition(\n      array,\n      sortedArray,\n      lastUnsortedIdx,\n      toDispatch,\n      algorithm\n    );\n    toDispatch.push({\n      actions: [\n        setItemMapper(\n          algorithm,\n          array[lastUnsortedIdx],\n          lastUnsortedIdx--,\n          ItemStateColorEnum.SORTED\n        ),\n      ],\n    });\n  }\n\n  return toDispatch;\n}\n\nfunction partition(array, sortedArray, lastUnsortedIdx, toDispatch, algorithm) {\n  let sorted = true;\n\n  for (let i = 0; i < lastUnsortedIdx; i++) {\n    toDispatch.push({\n      actions: [cursorMapper(algorithm, array, i)],\n    });\n    if (array[i].value > array[i + 1].value) {\n      toDispatch.push(...swap(array, i, i + 1, algorithm));\n      sorted = false;\n    }\n    toDispatch.push({\n      actions: [\n        cursorReleasedMapper(\n          algorithm,\n          array,\n          i,\n          itemIsSorted(sortedArray, array[i], i)\n        ),\n      ],\n    });\n  }\n  return sorted;\n}\n","import { sortActionDispatched } from \"../store/actions/sorting\";\nimport decorator from \"../helpers/decorators/sortOperation\";\nimport { ItemStateColorEnum } from \"../constants/item\";\nimport { itemIsSorted, swap } from \"../helpers/sortHelper\";\nimport {\n  cursorMapper,\n  cursorReleasedMapper,\n  setItemMapper,\n} from \"../helpers/mappers/payloadMapper\";\n\nexport const sortOperation = (array, sortedArray, algorithm) => (dispatch) => {\n  const wrappedSort = decorator(selectionSort)(algorithm);\n  dispatch(\n    sortActionDispatched({\n      toDispatch: wrappedSort([...array], sortedArray, algorithm),\n      latencies: 5,\n    })\n  );\n};\n\nfunction selectionSort(array, sortedArray, algorithm) {\n  let toDispatch = [];\n  for (let i = 0; i < array.length; i++) {\n    partition(i, toDispatch, array, sortedArray, algorithm);\n    toDispatch.push({\n      actions: [\n        setItemMapper(algorithm, array[i], i, ItemStateColorEnum.SORTED),\n      ],\n    });\n  }\n  return toDispatch;\n}\n\nfunction partition(lastUnsortedIdx, toDispatch, array, sortedArray, algorithm) {\n  const nbElements = array.length;\n  let minIdx = lastUnsortedIdx;\n\n  for (let i = lastUnsortedIdx; i < nbElements; i++) {\n    toDispatch.push({\n      actions: [cursorMapper(algorithm, array, i)],\n    });\n    if (array[i].value < array[minIdx].value) {\n      toDispatch.push({\n        actions: [\n          cursorReleasedMapper(\n            algorithm,\n            array,\n            minIdx,\n            itemIsSorted(sortedArray, array[minIdx], minIdx)\n          ),\n          getMinItemAction(array, i, algorithm),\n        ],\n      });\n      minIdx = i;\n    }\n    toDispatch.push({\n      actions: [\n        getReleaseCursorAction(i, minIdx, array, sortedArray, algorithm),\n      ],\n    });\n  }\n  toDispatch.push(...swap(array, lastUnsortedIdx, minIdx, algorithm));\n}\n\nfunction getMinItemAction(array, i, algorithm) {\n  return setItemMapper(algorithm, array[i], i, ItemStateColorEnum.PIVOT);\n}\n\nfunction getReleaseCursorAction(i, minIdx, array, sortedArray, algorithm) {\n  return (\n    (i !== minIdx &&\n      cursorReleasedMapper(\n        algorithm,\n        array,\n        i,\n        itemIsSorted(sortedArray, array[i], i)\n      )) ||\n    setItemMapper(algorithm, array[i], i, ItemStateColorEnum.PIVOT)\n  );\n}\n","import { ItemStateColorEnum } from \"../constants/item\";\nimport {\n  cursorReleasedMapper,\n  setItemMapper,\n} from \"../helpers/mappers/payloadMapper\";\nimport {\n  getIndexById,\n  getItemsPartition,\n  itemIsSorted,\n  swap,\n  swappersReleased,\n} from \"../helpers/sortHelper\";\nimport decorator from \"../helpers/decorators/sortOperation\";\nimport { sortActionDispatched } from \"../store/actions/sorting\";\n\nexport const sortOperation = (array, sortedArray, algorithm) => (dispatch) => {\n  const wrappedSort = decorator(mergeSort)(algorithm);\n  dispatch(\n    sortActionDispatched({\n      toDispatch: wrappedSort(\n        [...array],\n        sortedArray,\n        0,\n        array.length - 1,\n        [],\n        algorithm\n      ),\n      latencies: 4,\n    })\n  );\n};\n\nconst mergeSort = (\n  array,\n  sortedArray,\n  startIdx,\n  endIdx,\n  toDispatch,\n  algorithm\n) => {\n  if (startIdx >= endIdx) return;\n\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\n  mergeSort(array, sortedArray, startIdx, middleIdx, toDispatch, algorithm);\n  mergeSort(array, sortedArray, middleIdx + 1, endIdx, toDispatch, algorithm);\n\n  return merge(\n    array,\n    sortedArray,\n    startIdx,\n    middleIdx,\n    endIdx,\n    toDispatch,\n    algorithm\n  );\n};\n\nfunction merge(\n  array,\n  sortedArray,\n  startIdx,\n  middleIdx,\n  endIdx,\n  toDispatch,\n  algorithm\n) {\n  let temp = [];\n  let accLeft = startIdx;\n  let accRight = middleIdx + 1;\n  let accTemp = 0;\n  toDispatch.push({\n    actions: [...getItemsPartition(array, startIdx, endIdx, algorithm)],\n  });\n  while (accLeft <= middleIdx && accRight <= endIdx) {\n    if (array[accLeft].value <= array[accRight].value) {\n      temp[accTemp++] = array[accLeft++];\n    } else {\n      temp[accTemp++] = array[accRight++];\n    }\n  }\n  while (accLeft <= middleIdx) {\n    temp[accTemp++] = array[accLeft++];\n  }\n  while (accRight <= endIdx) {\n    temp[accTemp++] = array[accRight++];\n  }\n  for (let i = startIdx; i <= endIdx; i++) {\n    const j = getIndexById(array, temp[i - startIdx].id);\n    toDispatch.push({\n      actions: [\n        setItemMapper(algorithm, array[i], i, ItemStateColorEnum.CURRENT),\n        setItemMapper(algorithm, array[j], j, ItemStateColorEnum.CURRENT),\n      ],\n    });\n    if (i !== j) {\n      toDispatch.push(...swap(array, i, j, algorithm));\n      toDispatch.push({\n        actions: [...swappersReleased(array, sortedArray, i, j, algorithm)],\n      });\n    } else {\n      toDispatch.push({\n        actions: [\n          cursorReleasedMapper(\n            algorithm,\n            array,\n            j,\n            itemIsSorted(sortedArray, array[j], j)\n          ),\n        ],\n      });\n    }\n  }\n\n  return toDispatch;\n}\n","import { sortActionDispatched } from \"../store/actions/sorting\";\nimport decorator from \"../helpers/decorators/sortOperation\";\nimport {\n  cursorMapper,\n  cursorReleasedMapper,\n  setItemMapper,\n} from \"../helpers/mappers/payloadMapper\";\nimport {\n  getItemsPartition,\n  itemIsSorted,\n  swap,\n  swappersReleased,\n} from \"../helpers/sortHelper\";\nimport { ItemStateColorEnum } from \"../constants/item\";\n\nexport const sortOperation = (array, sortedArray, algorithm) => (dispatch) => {\n  const wrappedSort = decorator(quickSort)(algorithm);\n  dispatch(\n    sortActionDispatched({\n      toDispatch: wrappedSort(\n        [...array],\n        sortedArray,\n        0,\n        array.length - 1,\n        [],\n        algorithm\n      ),\n      latencies: 7,\n    })\n  );\n};\n\nfunction quickSort(array, sortedArray, left, right, toDispatch, algorithm) {\n  if (array.length > 1) {\n    const index = partition(\n      array,\n      sortedArray,\n      left,\n      right,\n      toDispatch,\n      algorithm\n    );\n    if (left < index - 1) {\n      quickSort(array, sortedArray, left, index - 1, toDispatch, algorithm);\n    }\n    if (index < right) {\n      quickSort(array, sortedArray, index, right, toDispatch, algorithm);\n    }\n  }\n  return toDispatch;\n}\n\nfunction partition(array, sortedArray, left, right, toDispatch, algorithm) {\n  const pivotIndex = Math.floor((right + left) / 2);\n  const pivot = array[pivotIndex];\n  let i = left,\n    j = right;\n  toDispatch.push({\n    actions: [\n      ...getItemsPartition(array, left, right, algorithm),\n      setItemMapper(algorithm, pivot, pivotIndex, ItemStateColorEnum.PIVOT),\n    ],\n    waiting: true,\n  });\n  while (i <= j) {\n    while (array[i].value < pivot.value) {\n      toDispatch.push({\n        actions: [cursorMapper(algorithm, array, i)],\n      });\n      toDispatch.push({\n        actions: [\n          cursorReleasedMapper(\n            algorithm,\n            array,\n            i,\n            itemIsSorted(sortedArray, array[i], i)\n          ),\n        ],\n      });\n      i++;\n    }\n    while (array[j].value > pivot.value) {\n      toDispatch.push({\n        actions: [cursorMapper(algorithm, array, j)],\n      });\n      toDispatch.push({\n        actions: [\n          cursorReleasedMapper(\n            algorithm,\n            array,\n            j,\n            itemIsSorted(sortedArray, array[j], j)\n          ),\n        ],\n      });\n      j--;\n    }\n    if (i <= j) {\n      toDispatch.push(...swap(array, i, j, algorithm));\n      toDispatch.push({\n        actions: [...swappersReleased(array, sortedArray, i, j, algorithm)],\n      });\n      i++;\n      j--;\n    }\n  }\n  return i;\n}\n","import * as bubbleSort from \"../operations/bubbleSortOperation\";\nimport * as selectionSort from \"../operations/selectionSortOperation\";\nimport * as mergeSort from \"../operations/mergeSortOperation\";\nimport * as quickSort from \"../operations/quickSortOperation\";\n\nimport { getAlgorithmItems } from \"../store/selectors/algorithmsSelector\";\n\nconst operations = {\n  bubbleSort: bubbleSort.sortOperation,\n  selectionSort: selectionSort.sortOperation,\n  mergeSort: mergeSort.sortOperation,\n  quickSort: quickSort.sortOperation,\n};\n\nexport const sortOperation = (algorithm, sortedArray) =>\n  function (dispatch, getState) {\n    const items = getAlgorithmItems(algorithm)(getState());\n    dispatch(operations[algorithm](items, sortedArray, algorithm));\n  };\n","import { connect } from \"react-redux\";\n\nimport SortForm from \"../components/main/ToolBar/SortForm\";\n\nimport { speedToPercentage } from \"../helpers/animationHelper\";\n\nimport { sortOperation } from \"../operations\";\n\nimport { getSortedItems } from \"../store/selectors/referentialSelector\";\nimport {\n  getAlgorithms,\n  getSelectedAlgorithms,\n} from \"../store/selectors/algorithmsSelector\";\n\nimport { setAlgorithm } from \"../store/models/algorithms\";\nimport { setSpeed } from \"../store/models/speed\";\nimport { isLocked } from \"../store/selectors/lockSelector\";\n\nconst mapStateToProps = (state) => ({\n  sortedItems: getSortedItems(state),\n  locked: isLocked(state),\n  selectedAlgorithms: getSelectedAlgorithms(state),\n  algorithms: getAlgorithms(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setSpeed: (speed) => dispatch(setSpeed(speedToPercentage(speed))),\n  setAlgorithm: (algorithm) => dispatch(setAlgorithm(algorithm)),\n  submit: (sortedArray, selectedAlgorithms) => {\n    selectedAlgorithms.forEach((algorithm) => {\n      dispatch(sortOperation(algorithm, sortedArray));\n    });\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SortForm);\n","import React from \"react\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nimport Form from \"../../commons/Form\";\nimport ArrayGeneratorFormContainer from \"../../../containers/ArrayGeneratorFormContainer\";\nimport SortFormContainer from \"../../../containers/SortFormContainer\";\nimport {\n  DARK_THEME,\n  TOOLBAR_PIXELS_HEIGHT,\n} from \"../../../constants/components\";\nimport { AppBar, styled } from \"@material-ui/core\";\n\nconst MyAppBar = styled(({ color, ...other }) => <AppBar {...other} />)({\n  background: (props) => props.color,\n});\n\nclass ToolBar extends Form {\n  render() {\n    return (\n      <MyAppBar color={DARK_THEME.color} position=\"static\">\n        <Toolbar\n          style={{\n            minHeight: TOOLBAR_PIXELS_HEIGHT,\n          }}\n        >\n          <ArrayGeneratorFormContainer />\n          <SortFormContainer />\n        </Toolbar>\n      </MyAppBar>\n    );\n  }\n}\nexport default ToolBar;\n","import ToolBar from \"./ToolBar\";\n\nexport default ToolBar;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"../../services/storeService\";\n\nimport PlaygroundContainer from \"../../containers/PlaygroundContainer\";\nimport ToolBar from \"./ToolBar\";\n\nconst App = () => (\n  <Provider store={store}>\n    <ToolBar></ToolBar>\n    <PlaygroundContainer></PlaygroundContainer>\n  </Provider>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/main/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}